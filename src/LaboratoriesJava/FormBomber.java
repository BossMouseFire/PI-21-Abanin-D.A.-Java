package LaboratoriesJava;

import LaboratoriesJava.enums.BombForms;
import LaboratoriesJava.enums.MovesBomber;
import LaboratoriesJava.interfaces.ITransport;
import LaboratoriesJava.transport.Bomber;
import LaboratoriesJava.transport.Plane;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class FormBomber extends JFrame {
    private JPanel panel;
    private JButton createPlaneButton;
    private JButton createBomberButton;
    private JButton buttonUp;
    private JButton buttonDown;
    private JButton buttonLeft;
    private JButton buttonRight;
    private JButton createBombsRect;
    private JButton createRocket;
    private ITransport plane;

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (plane != null) {
            Graphics2D graphic2d = (Graphics2D) g;
            plane.drawTransport(graphic2d);
        }
    }

    public FormBomber() {
        $$$setupUI$$$();
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        getContentPane().add(panel);

        createPlaneButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane = new Plane(2000, 100, Color.decode("#000000"));
                plane.setPosition(100, 100, 700, 500);
                repaint();
            }
        });
        createBomberButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane = new Bomber(2000,
                        true, true, 100,
                        Color.decode("#000000"), Color.decode("#d61e11"), BombForms.Oval);
                plane.setPosition(100, 100, 700, 500);
                repaint();
            }
        });
        buttonUp.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane.moveTransport(MovesBomber.Up);
                repaint();
            }
        });
        buttonDown.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane.moveTransport(MovesBomber.Down);
                repaint();
            }
        });
        buttonLeft.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane.moveTransport(MovesBomber.Left);
                repaint();
            }
        });
        buttonRight.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane.moveTransport(MovesBomber.Right);
                repaint();
            }
        });
        createRocket.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane = new Bomber(2000,
                        true, true, 100,
                        Color.decode("#000000"), Color.decode("#d61e11"), BombForms.Rocket);
                plane.setPosition(100, 100, 700, 500);
                repaint();
            }
        });
        createBombsRect.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                plane = new Bomber(2000,
                        true, true, 100,
                        Color.decode("#000000"), Color.decode("#d61e11"), BombForms.Rectangle);
                plane.setPosition(100, 100, 700, 500);
                repaint();
            }
        });
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridBagLayout());
        buttonUp = new JButton();
        buttonUp.setText("Вперёд");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 4;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(buttonUp, gbc);
        buttonDown = new JButton();
        buttonDown.setText("Назад");
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(buttonDown, gbc);
        createPlaneButton = new JButton();
        createPlaneButton.setEnabled(true);
        createPlaneButton.setText("Создать самолёт");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(createPlaneButton, gbc);
        buttonRight = new JButton();
        buttonRight.setText("Вправо");
        gbc = new GridBagConstraints();
        gbc.gridx = 6;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(buttonRight, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 5;
        gbc.gridy = 3;
        gbc.weighty = 20.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        panel.add(spacer1, gbc);
        buttonLeft = new JButton();
        buttonLeft.setText("Влево");
        gbc = new GridBagConstraints();
        gbc.gridx = 4;
        gbc.gridy = 5;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(buttonLeft, gbc);
        createBomberButton = new JButton();
        createBomberButton.setText("Создать бомбардировщик");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(createBomberButton, gbc);
        createRocket = new JButton();
        createRocket.setText("Ракеты");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(createRocket, gbc);
        createBombsRect = new JButton();
        createBombsRect.setText("Квадратные бомбы");
        gbc = new GridBagConstraints();
        gbc.gridx = 3;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        panel.add(createBombsRect, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
